# .zshrc for mac-ibm (m1 arm), sonoma, zshversion in first alias
# 251024, aliases

export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="jax"
export UPDATE_ZSH_DAYS=180
COMPLETION_WAITING_DOTS="true"
plugins=(git zsh-autosuggestions)

ZSH_CACHE_DIR=$ZSH/cache
if [[ ! -d $ZSH_CACHE_DIR ]]; then
  mkdir $ZSH_CACHE_DIR
fi
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
source $ZSH/oh-my-zsh.sh

eval "$(/opt/homebrew/bin/brew shellenv)"
export HOMEBREW_NO_AUTO_UPDATE=1 && export HOMEBREW_NO_ANALYTICS=1

# for node.js to trust ibm root ca
export NODE_EXTRA_CA_CERTS=/Users/jay/.config/certs/ibm-internal-root-ca.pem

# node version manager, $ mkdir ~/.nvm
export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# 251021: removing path to python3.9, not needed as using python3.13 managed by brew `/Users/jay/Library/Python/3.9/bin:`
export PATH=/Users/jay/.nvm/versions/node/v20.11.0/bin:/opt/homebrew/bin:/opt/homebrew/opt/libpq/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/jay/Library/CloudStorage/Box-Box/1-Jay-IBM-Docs/ibmid:/Users/jay/.local/bin:

# autocomplete for terraform
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

# for GNUpg
export GUILE_LOAD_PATH="/usr/local/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="/usr/local/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="/usr/local/lib/guile/3.0/extensions"

## aliases
unalias -a # destroy all existing aliases

alias zshversion='echo zshrc=v5.13'

source $HOME/.config/.aliases-ibm # load ibm aliases, credentials
source $HOME/.jax-aliases # load common aliases between linux and mac
source $HOME/.mac-aliases # load common aliases between mac

alias newzsh='wget -O /Users/$USER/.zshrc https://raw.githubusercontent.com/jayknyn/public/main/zsh/.zshrc-mac-ibm && wget -O /Users/$USER/.oh-my-zsh/themes/jax.zsh-theme https://raw.githubusercontent.com/jayknyn/public/main/zsh/jax-mac.zsh-theme && wget -O /Users/$USER/.jax-aliases https://raw.githubusercontent.com/jayknyn/public/main/zsh/.jax-aliases && wget -O /Users/$USER/.mac-aliases https://raw.githubusercontent.com/jayknyn/public/main/zsh/.mac-aliases && source ~/.zshrc'

alias vsc='code .'
alias python='python3'
alias pip='pip3'
alias dss='detect-secrets scan --update .secrets.baseline'
alias dsa='detect-secrets audit .secrets.baseline'
alias cicd='cd /Users/jay/code/cio-cicd-release-management'
alias osp1='/Users/jay/code/ies-devsecops/openshift/openshift-cluster-login.sh prod wdc1'
alias osp2='/Users/jay/code/ies-devsecops/openshift/openshift-cluster-login.sh prod wdc2'
alias osnp1='/Users/jay/code/ies-devsecops/openshift/openshift-cluster-login.sh nonprod wdc1'
alias osnp2='/Users/jay/code/ies-devsecops/openshift/openshift-cluster-login.sh nonprod wdc2'
alias osnp3='/Users/jay/code/ies-devsecops/openshift/openshift-cluster-login.sh nonprod wdc3'
alias vlp='source /Users/jay/code/ies-devsecops/vault/vault-login-prod.sh'
alias vlnp='source /Users/jay/code/ies-devsecops/vault/vault-login-nonprod.sh'
alias vr='/Users/jay/code/ies-devsecops/vault/vault-read.sh'
alias vrkv='vault read -format=json ibmcloud/kv/secrets | jq -r '\''.data.secrets.[] | .name'\'''
alias vrdb='vault read -format=json ibmcloud/service_credentials/secrets | jq -r '\''.data.secrets.[] | .name'\'''
alias gpge='/Users/jay/code/ies-devsecops/scripts/gpg-encrypt-decrypt/gpg-encrypt.sh'
alias gpgd='/Users/jay/code/ies-devsecops/scripts/gpg-encrypt-decrypt/gpg-decrypt.sh'
alias ogp='oc get pods'

# function to write secrets to vault nonprod and prod
vwnp() { vault kv put ibmcloud/kv/$1 value=@secrets-nonprod/$1.vault.json }
vwp() { vault kv put ibmcloud/kv/$1 value=@secrets-prod/$1.vault.json }

## openshift funtions
# ➜ execpod <app-name>
execpod() { oc exec -it "$(oc get pods --no-headers | grep "$1" | awk '{print $1}' | head -n 1)" -- bash }
# ➜ getlogfile <app-name> </path/to/log.file>
getlogfile() { oc exec "$(oc get pods --no-headers | grep "$1" | awk '{print $1}' | head -n 1)" -- cat "$2" > "$(basename "$2" .log)-$(date +%y%m%d-%H%M).log" }
# get container/stdout/stderr logs ➜ getlogs <app-name>
getlogs() { oc logs -c "$1" "$(oc get pods --no-headers | grep "$1" | awk '{print $1}' | head -n 1)" > "$1-stdout-$(date +%y%m%d-%H%M).log"; }
# stream container logs ➜ taillogs <app-name>
taillogs() { oc logs -f -l app="$1" }

## shell config
zshversion && nvm use 20